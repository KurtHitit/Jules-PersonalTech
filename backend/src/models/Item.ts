// backend/src/models/Item.ts

// Interface to define the structure of an Item object
// This will be expanded and likely replaced by a database schema (e.g., Mongoose Schema) later.

export interface ItemPhoto {
  url: string; // URL or path to the photo
  caption?: string;
}

export interface ItemDocument {
  url: string; // URL or path to the document
  filename: string;
  type: 'receipt' | 'warranty' | 'manual' | 'other';
}

export interface Item {
  id: string; // Unique identifier, will likely be auto-generated by the database
  userId: string; // Identifier for the user who owns the item (for future user integration)
  name: string;
  category?: string; // e.g., Electronics, Appliance, Furniture, Vehicle, Tool
  brand?: string;
  model?: string;
  serialNumber?: string;
  purchaseDate?: Date;
  purchasePrice?: number;
  currency?: string; // e.g., USD, EUR
  retailer?: string;
  notes?: string;
  photos?: ItemPhoto[];
  documents?: ItemDocument[]; // For receipts, warranties, manuals
  createdAt: Date;
  updatedAt: Date;
}

// Example of how you might create an item (for conceptual use, not for database interaction yet)
export const createMockItem = (data: Partial<Item>): Item => {
  const now = new Date();
  return {
    id: Math.random().toString(36).substring(2, 15), // Simple mock ID
    userId: 'mockUserId', // Placeholder
    name: 'Default Item Name',
    createdAt: now,
    updatedAt: now,
    ...data,
  };
};
